"""empty message

Revision ID: 9ebad45cdc1b
Revises: 
Create Date: 2020-09-11 09:29:20.973247

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9ebad45cdc1b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('permission', sa.Integer(), nullable=True),
    sa.Column('name', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('avatar', sa.String(length=128), nullable=True),
    sa.Column('lab_name', sa.String(length=64), nullable=True),
    sa.Column('lab_location', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_users_role_id_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('equipments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('usage', sa.String(length=64), nullable=True),
    sa.Column('comfirmed_back', sa.Boolean(), nullable=True),
    sa.Column('current_application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_equipments_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipments'))
    )
    op.create_table('lender_applications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('lab_name', sa.String(length=64), nullable=True),
    sa.Column('lab_location', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.Column('review_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], name=op.f('fk_lender_applications_candidate_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lender_applications'))
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=64), nullable=True),
    sa.Column('notification_time', sa.DateTime(), nullable=True),
    sa.Column('isRead', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name=op.f('fk_notifications_receiver_id_users')),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('fk_notifications_sender_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_table('equipemnt_puton_applications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('review_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], name=op.f('fk_equipemnt_puton_applications_candidate_id_users')),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipments.id'], name=op.f('fk_equipemnt_puton_applications_equipment_id_equipments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipemnt_puton_applications'))
    )
    op.create_table('equipment_borrow_applications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('return_time', sa.DateTime(), nullable=True),
    sa.Column('usage', sa.String(length=64), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('review_time', sa.DateTime(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], name=op.f('fk_equipment_borrow_applications_candidate_id_users')),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipments.id'], name=op.f('fk_equipment_borrow_applications_equipment_id_equipments')),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name=op.f('fk_equipment_borrow_applications_reviewer_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipment_borrow_applications'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('equipment_borrow_applications')
    op.drop_table('equipemnt_puton_applications')
    op.drop_table('notifications')
    op.drop_table('lender_applications')
    op.drop_table('equipments')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
