"""'1.0'

Revision ID: 60aea37b6925
Revises: 
Create Date: 2020-09-09 11:24:24.657635

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '60aea37b6925'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipemnt_puton_application',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('usage', sa.String(length=64), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('review_time', sa.DateTime(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['user.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('return_time', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('usage', sa.String(length=64), nullable=True),
    sa.Column('current_app_id', sa.Integer(), nullable=True),
    sa.Column('comfirmed_back', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['current_app_id'], ['equipment_borrow_application.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_borrow_application',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('return_time', sa.DateTime(), nullable=True),
    sa.Column('usage', sa.String(length=64), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('review_time', sa.DateTime(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['user.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lenderApplication',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('lab_name', sa.String(length=64), nullable=True),
    sa.Column('lab_location', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=64), nullable=True),
    sa.Column('notification_time', sa.DateTime(), nullable=True),
    sa.Column('isRead', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('permission', sa.Integer(), nullable=True),
    sa.Column('name', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('avatar', sa.String(length=128), nullable=True),
    sa.Column('lab_name', sa.String(length=64), nullable=True),
    sa.Column('lab_location', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('notification')
    op.drop_table('lenderApplication')
    op.drop_table('equipment_borrow_application')
    op.drop_table('equipment')
    op.drop_table('equipemnt_puton_application')
    # ### end Alembic commands ###
